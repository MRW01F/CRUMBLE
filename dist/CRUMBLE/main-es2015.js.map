{"version":3,"sources":["./src/app/subreddit/subreddit.service.ts","./src/app/auth/user-profile/user-profile.component.css","./src/app/subreddit/list-subreddits/list-subreddits.component.css","./src/app/auth/signup/signup.component.html","./src/app/post/view-post/view-post.component.html","./src/app/home/home.component.ts","./src/app/app.component.css","./src/environments/environment.ts","./src/app/shared/vote-button/vote-button.component.html","./src/app/shared/subreddit-side-bar/subreddit-side-bar.component.ts","./src/app/header/header.component.css","./src/app/shared/post.service.ts","./src/app/home/home.component.html","./src/app/post/view-post/view-post.component.ts","./src/app/shared/vote.service.ts","./src/app/subreddit/list-subreddits/list-subreddits.component.html","./src/app/shared/vote-button/vote-button.component.css","./src/app/subreddit/list-subreddits/list-subreddits.component.ts","./src/app/auth/signup/signup.component.css","./src/app/token-interceptor.ts","./src/app/subreddit/create-subreddit/create-subreddit.component.ts","./src/app/auth/auth.guard.ts","./src/app/post/create-post/create-post.component.html","./src/app/shared/vote-button/vote-type.ts","./src/app/auth/user-profile/user-profile.component.html","./src/app/post/view-post/view-post.component.css","./src/app/home/home.component.css","./src/app/auth/signup/signup.component.ts","./src/app/app.component.ts","./src/app/post/create-post/create-post.component.css","./src/app/app.component.html","./src/app/auth/shared/auth.service.ts","./src/app/app.module.ts","./src/app/shared/vote-button/vote-button.component.ts","./src/app/subreddit/create-subreddit/create-subreddit.component.css","./src/app/auth/login/login.component.ts","./src/app/shared/post-tile/post-tile.component.ts","./src/app/shared/post-tile/post-tile.component.css","./src/app/shared/side-bar/side-bar.component.css","./src/app/header/header.component.ts","./src/app/shared/side-bar/side-bar.component.html","./src/app/shared/subreddit-side-bar/subreddit-side-bar.component.css","./src/app/header/header.component.html","./src/app/comment/comment.service.ts","./src/app/subreddit/create-subreddit/create-subreddit.component.html","./src/app/shared/subreddit-side-bar/subreddit-side-bar.component.html","./src/app/auth/user-profile/user-profile.component.ts","./src/app/shared/post-tile/post-tile.component.html","./src/app/post/create-post/create-post.component.ts","./src/app/app-routing.module.ts","./src/app/auth/login/login.component.css","./src/app/shared/side-bar/side-bar.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SubredditModel } from './subreddit-response';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubredditService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllSubreddits(): Observable<Array<SubredditModel>> {\r\n    return this.http.get<Array<SubredditModel>>('http://localhost:8080/api/subreddit');\r\n  }\r\n\r\n  createSubreddit(subredditModel: SubredditModel): Observable<SubredditModel> {\r\n    return this.http.post<SubredditModel>('http://localhost:8080/api/subreddit',\r\n      subredditModel);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LXN1YnJlZGRpdHMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"register-section\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\" style=\\\"text-align: center\\\">\\r\\n                    <h4>Register</h4>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"signup()\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"email_address\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">E-Mail\\r\\n                                Address</label>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <input type=\\\"text\\\" [formControlName]=\\\"'email'\\\" id=\\\"email_address\\\" class=\\\"form-control\\\" name=\\\"email-address\\\" required\\r\\n                                    autofocus>\\r\\n                                <span *ngIf=\\\"!signupForm.get('email').valid && signupForm.get('email').touched\\\">\\r\\n                                    Please provide a valid email\\r\\n                                </span>                                    \\r\\n                            </div>\\r\\n                        </div>\\r\\n \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-md-4 col-form-label text-md-right\\\">User Name</label>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <input type=\\\"text\\\" [formControlName]=\\\"'username'\\\"class=\\\"form-control\\\" required autofocus>\\r\\n                                <span *ngIf=\\\"!signupForm.get('username').valid && signupForm.get('username').touched\\\">\\r\\n                                    Please provide a valid username\\r\\n                                </span>                                 \\r\\n                            </div>\\r\\n                        </div>\\r\\n \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Password</label>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <input type=\\\"password\\\" [formControlName]=\\\"'password'\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" required>\\r\\n                                <span *ngIf=\\\"!signupForm.get('password').valid && signupForm.get('password').touched\\\">\\r\\n                                    Please provide a valid Password\\r\\n                                </span>  \\r\\n                            </div>\\r\\n                        </div>\\r\\n \\r\\n                        <span class=\\\"col-md-6 offset-md-4\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"sign-up\\\">\\r\\n                                Sign Up\\r\\n                            </button>\\r\\n                            <span style=\\\"padding-left: 15px\\\">Existing user? <a routerLink=\\\"/login\\\">Log In</a></span>\\r\\n                        </span>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <hr />\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n      <div class=\\\"row post\\\">\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n          <app-vote-button [post]=\\\"post\\\"></app-vote-button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-11\\\">\\r\\n          <span>\\r\\n            <span class=\\\"subreddit-text\\\"><a class=\\\"post-url\\\" href=\\\"\\\">{{post.subredditName}}</a></span>\\r\\n            <span> . Posted\\r\\n              <span> {{post.duration}} </span>\\r\\n              by              \\r\\n              <a class=\\\"username\\\" href=\\\"\\\">{{post.userName}}</a>\\r\\n            </span>\\r\\n          </span>\\r\\n          <hr />\\r\\n          <a routerLink=\\\"post.url\\\" class=\\\"post-title\\\">{{post.postName}}</a>\\r\\n          <div>\\r\\n            <p class=\\\"post-text\\\" [innerHtml]=\\\"post.description\\\"></p>\\r\\n          </div>\\r\\n          <div class=\\\"post-comment\\\">\\r\\n            <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"postComment()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <textarea class=\\\"form-control\\\" [formControlName]=\\\"'text'\\\" placeholder=\\\"Your Thoughts?\\\"></textarea>\\r\\n              </div>\\r\\n              <button type=\\\"submit\\\" class=\\\"login float-right\\\">Comment</button>\\r\\n            </form>\\r\\n          </div>\\r\\n          <div style=\\\"margin-top: 60px;\\\" *ngFor=\\\"let comment of comments\\\">\\r\\n            <div class=\\\"comment\\\">\\r\\n              <div class=\\\"username\\\">\\r\\n                <a routerLink=\\\"/user/comment.username\\\">{{comment.userName}}</a>\\r\\n              </div>\\r\\n              <div>\\r\\n                <p>{{comment.duration}}</p>\\r\\n              </div>\\r\\n              <b>{{comment.text}}</b>\\r\\n            </div>\\r\\n            <hr />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <app-side-bar></app-side-bar>\\r\\n      <app-subreddit-side-bar></app-subreddit-side-bar>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { PostModel } from '../shared/post-model';\r\nimport { PostService } from '../shared/post.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  posts: Array<PostModel> = [];\r\n\r\n  constructor(private postService: PostService) {\r\n    this.postService.getAllPosts().subscribe(post => {\r\n      this.posts = post;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<!-- Section to Display Votes-->\\r\\n<div class=\\\"col-md-1\\\">\\r\\n    <div class=\\\"d-flex flex-column votebox\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <fa-icon (click)=\\\"upvotePost()\\\" class=\\\"upvote\\\" [icon]=\\\"faArrowUp\\\" [style.color]=\\\"post.upVote ? 'green':''\\\">\\r\\n        </fa-icon>\\r\\n    </div>\\r\\n    <div class=\\\"p-2 votecount\\\">{{post.voteCount}}</div>\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <fa-icon (click)=\\\"downvotePost()\\\" class=\\\"downvote\\\" [icon]=\\\"faArrowDown\\\" [style.color]=\\\"post.downVote ? 'red':''\\\">\\r\\n        </fa-icon>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { SubredditService } from 'src/app/subreddit/subreddit.service';\r\nimport { SubredditModel } from 'src/app/subreddit/subreddit-response';\r\n\r\n@Component({\r\n  selector: 'app-subreddit-side-bar',\r\n  templateUrl: './subreddit-side-bar.component.html',\r\n  styleUrls: ['./subreddit-side-bar.component.css']\r\n})\r\nexport class SubredditSideBarComponent implements OnInit {\r\n  subreddits: Array<SubredditModel> = [];\r\n  displayViewAll: boolean;\r\n\r\n  constructor(private subredditService: SubredditService) {\r\n    this.subredditService.getAllSubreddits().subscribe(data => {\r\n      if (data.length > 3) {\r\n        this.subreddits = data.splice(0, 3);\r\n        this.displayViewAll = true;\r\n      } else {\r\n        this.subreddits = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","export default \"header{\\r\\n    border-radius: 1px solid;\\r\\n}\\r\\n.reddit-icon-svg{\\r\\n    height: 50px;\\r\\n    padding: 8px 8px 8px 0;\\r\\n    width: 50px;\\r\\n}\\r\\n.reddit-text{        \\r\\n    font-weight: 700;\\r\\n    height: 50px;\\r\\n    width: 50px;    \\r\\n}\\r\\n.logo{\\r\\n    text-decoration: none;\\r\\n}\\r\\n.login, .sign-up{    \\r\\n    background-color: transparent;\\r\\n    border-color: #0079D3;\\r\\n    color: #0079D3;\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;  \\r\\n}\\r\\n.sign-up{\\r\\n    background-color: #0079D3;\\r\\n    border-color: #0079D3;\\r\\n    color: aliceblue;\\r\\n}\\r\\n.sign-up:hover{\\r\\n    opacity: 0.6;\\r\\n}\\r\\n.userdetails{    \\r\\n    background-color: transparent;\\r\\n    border-color: #0079D3;\\r\\n    color: #0079D3;\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;\\r\\n    border: 0px;\\r\\n}\\r\\n.userdetails:hover{\\r\\n    border: 1px solid;\\r\\n}\\r\\n.dropdown-item{\\r\\n    background-color: #f8f9fa;\\r\\n    font-size: 14px;\\r\\n    font-weight: 500;\\r\\n    line-height: 18px;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n.dropdown-item:hover{\\r\\n    background-color: #0079D3;\\r\\n}\\r\\n.dropdown-menu{\\r\\n    background-color: #f8f9fa;\\r\\n}\\r\\n.account-icon{\\r\\n    border-radius: 4px;\\r\\n    float: left;\\r\\n    margin-right: 5px;\\r\\n    max-height: 24px;\\r\\n    max-width: 24px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXdCO0FBQzVCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLFdBQVc7QUFDZjtBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixXQUFXO0FBQ2Y7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQix5QkFBeUI7SUFDekIsaUJBQWlCO0lBQ2pCLFVBQVU7QUFDZDtBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7QUFDcEI7QUFFQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixxQkFBcUI7SUFDckIsY0FBYztJQUNkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsV0FBVztBQUNmO0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsc0JBQXNCO0FBQzFCO0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkIiLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoZWFkZXJ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxcHggc29saWQ7XHJcbn1cclxuLnJlZGRpdC1pY29uLXN2Z3tcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHBhZGRpbmc6IDhweCA4cHggOHB4IDA7XHJcbiAgICB3aWR0aDogNTBweDtcclxufVxyXG5cclxuLnJlZGRpdC10ZXh0eyAgICAgICAgXHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgd2lkdGg6IDUwcHg7ICAgIFxyXG59XHJcbi5sb2dve1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4ubG9naW4sIC5zaWduLXVweyAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA3OUQzO1xyXG4gICAgY29sb3I6ICMwMDc5RDM7XHJcbiAgICBmaWxsOiAjMDA3OUQzO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogLjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDNweCAxNnB4O1xyXG4gICAgb3BhY2l0eTogMTsgIFxyXG59XHJcblxyXG4uc2lnbi11cHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc5RDM7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDc5RDM7XHJcbiAgICBjb2xvcjogYWxpY2VibHVlO1xyXG59XHJcblxyXG4uc2lnbi11cDpob3ZlcntcclxuICAgIG9wYWNpdHk6IDAuNjtcclxufVxyXG5cclxuLnVzZXJkZXRhaWxzeyAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA3OUQzO1xyXG4gICAgY29sb3I6ICMwMDc5RDM7XHJcbiAgICBmaWxsOiAjMDA3OUQzO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogLjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDNweCAxNnB4O1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGJvcmRlcjogMHB4O1xyXG59XHJcblxyXG4udXNlcmRldGFpbHM6aG92ZXJ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcclxufVxyXG5cclxuLmRyb3Bkb3duLWl0ZW17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmRyb3Bkb3duLWl0ZW06aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3OUQzO1xyXG59XHJcblxyXG4uZHJvcGRvd24tbWVudXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XHJcbn1cclxuXHJcbi5hY2NvdW50LWljb257XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgbWF4LWhlaWdodDogMjRweDtcclxuICAgIG1heC13aWR0aDogMjRweDtcclxufSJdfQ== */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PostModel } from './post-model';\r\nimport { Observable } from 'rxjs';\r\nimport { CreatePostPayload } from '../post/create-post/create-post.payload';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPosts(): Observable<Array<PostModel>> {\r\n    return this.http.get<Array<PostModel>>('http://localhost:8080/api/posts/');\r\n  }\r\n\r\n  createPost(postPayload: CreatePostPayload): Observable<any> {\r\n    return this.http.post('http://localhost:8080/api/posts/', postPayload);\r\n  }\r\n\r\n  getPost(id: number): Observable<PostModel> {\r\n    return this.http.get<PostModel>('http://localhost:8080/api/posts/' + id);\r\n  }\r\n\r\n  getAllPostsByUser(name: string): Observable<PostModel[]> {\r\n    return this.http.get<PostModel[]>('http://localhost:8080/api/posts/by-user/' + name);\r\n  }\r\n}\r\n","export default \"<div class=\\\"reddit-body\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <hr />\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <app-post-tile [posts]=\\\"posts\\\"></app-post-tile>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-side-bar></app-side-bar>\\r\\n        <app-subreddit-side-bar></app-subreddit-side-bar>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/shared/post.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PostModel } from 'src/app/shared/post-model';\r\nimport { throwError } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CommentPayload } from 'src/app/comment/comment.payload';\r\nimport { CommentService } from 'src/app/comment/comment.service';\r\n\r\n@Component({\r\n  selector: 'app-view-post',\r\n  templateUrl: './view-post.component.html',\r\n  styleUrls: ['./view-post.component.css']\r\n})\r\nexport class ViewPostComponent implements OnInit {\r\n\r\n  postId: number;\r\n  post: PostModel;\r\n  commentForm: FormGroup;\r\n  commentPayload: CommentPayload;\r\n  comments: CommentPayload[];\r\n\r\n  constructor(private postService: PostService, private activateRoute: ActivatedRoute,\r\n    private commentService: CommentService, private router: Router) {\r\n    this.postId = this.activateRoute.snapshot.params.id;\r\n\r\n    this.commentForm = new FormGroup({\r\n      text: new FormControl('', Validators.required)\r\n    });\r\n    this.commentPayload = {\r\n      text: '',\r\n      postId: this.postId\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPostById();\r\n    this.getCommentsForPost();\r\n  }\r\n\r\n  postComment() {\r\n    this.commentPayload.text = this.commentForm.get('text').value;\r\n    this.commentService.postComment(this.commentPayload).subscribe(data => {\r\n      this.commentForm.get('text').setValue('');\r\n      this.getCommentsForPost();\r\n    }, error => {\r\n      throwError(error);\r\n    })\r\n  }\r\n\r\n  private getPostById() {\r\n    this.postService.getPost(this.postId).subscribe(data => {\r\n      this.post = data;\r\n    }, error => {\r\n      throwError(error);\r\n    });\r\n  }\r\n\r\n  private getCommentsForPost() {\r\n    this.commentService.getAllCommentsForPost(this.postId).subscribe(data => {\r\n      this.comments = data;\r\n    }, error => {\r\n      throwError(error);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { VotePayload } from './vote-button/vote-payload';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VoteService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  vote(votePayload: VotePayload): Observable<any> {\r\n    return this.http.post('http://localhost:8080/api/votes/', votePayload);\r\n  }\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <hr />\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <h2>List of Subreddits</h2>\\r\\n        <ul>\\r\\n          <li *ngFor=\\\"let subreddit of subreddits\\\">\\r\\n              <a routerLink=\\\"/view-subreddit/{{subreddit.id}}\\\">{{subreddit.name}}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <app-side-bar></app-side-bar>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\";","export default \".votebox {    \\r\\n    display: flex;\\r\\n    text-align: center;\\r\\n    flex-direction: column;\\r\\n    font-size: 1em;    \\r\\n}\\r\\n\\r\\n.votesection{\\r\\n    margin:0px;\\r\\n    background-color: #ffffff;\\r\\n}\\r\\n\\r\\n.upvote,.downvote {\\r\\n    cursor: pointer;\\r\\n    border-radius: 2px solid;        \\r\\n}\\r\\n\\r\\n.upvote:hover {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n.downvote:hover {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.votecount{\\r\\n    font-weight: bold;    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZvdGUtYnV0dG9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLHlCQUF5QjtBQUM3Qjs7QUFDQTtJQUNJLGVBQWU7SUFDZix3QkFBd0I7QUFDNUI7O0FBQ0E7SUFDSSxZQUFZO0FBQ2hCOztBQUNBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InZvdGUtYnV0dG9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudm90ZWJveCB7ICAgIFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmb250LXNpemU6IDFlbTsgICAgXHJcbn1cclxuXHJcbi52b3Rlc2VjdGlvbntcclxuICAgIG1hcmdpbjowcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG59XHJcbi51cHZvdGUsLmRvd252b3RlIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweCBzb2xpZDsgICAgICAgIFxyXG59XHJcbi51cHZvdGU6aG92ZXIge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG59XHJcbi5kb3dudm90ZTpob3ZlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4udm90ZWNvdW50e1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7ICAgIFxyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { SubredditModel } from '../subreddit-response';\r\nimport { SubredditService } from '../subreddit.service';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-list-subreddits',\r\n  templateUrl: './list-subreddits.component.html',\r\n  styleUrls: ['./list-subreddits.component.css']\r\n})\r\nexport class ListSubredditsComponent implements OnInit {\r\n\r\n  subreddits: Array<SubredditModel>;\r\n  constructor(private subredditService: SubredditService) { }\r\n\r\n  ngOnInit() {\r\n    this.subredditService.getAllSubreddits().subscribe(data => {\r\n      this.subreddits = data;\r\n    }, error => {\r\n      throwError(error);\r\n    })\r\n  }\r\n}","export default \".register-section {\\r\\n  margin: 100px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmIiwiZmlsZSI6InNpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZ2lzdGVyLXNlY3Rpb24ge1xyXG4gIG1hcmdpbjogMTAwcHg7XHJcbn0iXX0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { AuthService } from './auth/shared/auth.service';\r\nimport { catchError, switchMap, take, filter } from 'rxjs/operators';\r\nimport { LoginResponse } from './auth/login/login-response.payload';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    isTokenRefreshing = false;\r\n    refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject(null);\r\n\r\n    constructor(public authService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler):\r\n        Observable<HttpEvent<any>> {\r\n\r\n        if (req.url.indexOf('refresh') !== -1 || req.url.indexOf('login') !== -1) {\r\n            return next.handle(req);\r\n        }\r\n        const jwtToken = this.authService.getJwtToken();\r\n\r\n        if (jwtToken) {\r\n            return next.handle(this.addToken(req, jwtToken)).pipe(catchError(error => {\r\n                if (error instanceof HttpErrorResponse\r\n                    && error.status === 403) {\r\n                    return this.handleAuthErrors(req, next);\r\n                } else {\r\n                    return throwError(error);\r\n                }\r\n            }));\r\n        }\r\n        return next.handle(req);\r\n\r\n    }\r\n\r\n    private handleAuthErrors(req: HttpRequest<any>, next: HttpHandler)\r\n        : Observable<HttpEvent<any>> {\r\n        if (!this.isTokenRefreshing) {\r\n            this.isTokenRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.authService.refreshToken().pipe(\r\n                switchMap((refreshTokenResponse: LoginResponse) => {\r\n                    this.isTokenRefreshing = false;\r\n                    this.refreshTokenSubject\r\n                        .next(refreshTokenResponse.authenticationToken);\r\n                    return next.handle(this.addToken(req,\r\n                        refreshTokenResponse.authenticationToken));\r\n                })\r\n            )\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(result => result !== null),\r\n                take(1),\r\n                switchMap((res) => {\r\n                    return next.handle(this.addToken(req,\r\n                        this.authService.getJwtToken()))\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    addToken(req: HttpRequest<any>, jwtToken: any) {\r\n        return req.clone({\r\n            headers: req.headers.set('Authorization',\r\n                'Bearer ' + jwtToken)\r\n        });\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SubredditModel } from '../subreddit-response';\r\nimport { Router } from '@angular/router';\r\nimport { SubredditService } from '../subreddit.service';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-create-subreddit',\r\n  templateUrl: './create-subreddit.component.html',\r\n  styleUrls: ['./create-subreddit.component.css']\r\n})\r\nexport class CreateSubredditComponent implements OnInit {\r\n  createSubredditForm: FormGroup;\r\n  subredditModel: SubredditModel;\r\n  title = new FormControl('');\r\n  description = new FormControl('');\r\n\r\n  constructor(private router: Router, private subredditService: SubredditService) {\r\n    this.createSubredditForm = new FormGroup({\r\n      title: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required)\r\n    });\r\n    this.subredditModel = {\r\n      name: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  discard() {\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  createSubreddit() {\r\n    this.subredditModel.name = this.createSubredditForm.get('title')\r\n    .value;\r\n    this.subredditModel.description = this.createSubredditForm.get('description')\r\n    .value;\r\n    this.subredditService.createSubreddit(this.subredditModel).subscribe(data => {\r\n      this.router.navigateByUrl('/list-subreddits');\r\n    }, error => {\r\n      throwError(error);\r\n    })\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './shared/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    const isAuthenticated = this.authService.isLoggedIn();\r\n    if (isAuthenticated) {\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl('/login');\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <hr />\\r\\n      <div class=\\\"create-post-container col-md-9\\\">\\r\\n        <form class=\\\"post-form\\\" [formGroup]=\\\"createPostForm\\\" (ngSubmit)=\\\"createPost()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"create-post-heading\\\">Create Post</div>\\r\\n            <hr />\\r\\n            <input type=\\\"text\\\" [formControlName]=\\\"'postName'\\\" class=\\\"form-control\\\" style=\\\"margin-top: 5px\\\"\\r\\n              placeholder=\\\"Title\\\">\\r\\n  \\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControlName]=\\\"'url'\\\" style=\\\"margin-top: 5px\\\" placeholder=\\\"URL\\\">\\r\\n  \\r\\n            <select class=\\\"form-control\\\" style=\\\"margin-top: 10px\\\" [formControlName]=\\\"'subredditName'\\\">\\r\\n              <option value=\\\"\\\" selected disabled>Select Subreddit</option>\\r\\n              <option *ngFor=\\\"let subreddit of subreddits\\\">{{subreddit.name}}</option>\\r\\n            </select>\\r\\n  \\r\\n            <editor [formControlName]=\\\"'description'\\\" [init]=\\\"{\\r\\n                        height: 500,\\r\\n                        menubar: false,\\r\\n                        plugins: [\\r\\n                          'advlist autolink lists link image charmap print preview anchor',\\r\\n                          'searchreplace visualblocks code fullscreen',\\r\\n                          'insertdatetime media table paste code help wordcount'\\r\\n                        ],\\r\\n                        toolbar:\\r\\n                          'undo redo | formatselect | bold italic backcolor | \\\\\\r\\n                          alignleft aligncenter alignright alignjustify | \\\\\\r\\n                          bullist numlist outdent indent | removeformat | help'\\r\\n                      }\\\"></editor>\\r\\n            <span>\\r\\n              <div style=\\\"margin-top: 5px\\\" class=\\\"float-right\\\">\\r\\n                <button (click)=\\\"discardPost()\\\" class=\\\"btnDiscard\\\">Discard</button>\\r\\n                <button class=\\\"btnCreatePost\\\">Post</button>\\r\\n              </div>\\r\\n            </span>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\";","export enum VoteType {\r\n    UPVOTE,\r\n    DOWNVOTE\r\n}","export default \"<div class=\\\"container\\\">\\r\\n  <div>\\r\\n    Welcome <b>{{name}}</b>.<br /> You have posted <b>{{postLength}}</b> time(s) and commented\\r\\n    <b>{{commentLength}}</b> time(s).\\r\\n    You can check your post and comment history below.\\r\\n  </div>\\r\\n  <hr />\\r\\n  <div>\\r\\n    Your Posts:\\r\\n  </div>\\r\\n  <app-post-tile [posts]=\\\"posts\\\"></app-post-tile>\\r\\n  <hr />\\r\\n  <div>\\r\\n    Your Comments:\\r\\n  </div>\\r\\n  <div *ngFor=\\\"let comment of comments\\\">\\r\\n    <div class=\\\"comment\\\">\\r\\n      <div class=\\\"username\\\">\\r\\n        <a routerLink=\\\"/user/comment.username\\\">{{comment.userName}}</a>\\r\\n      </div>\\r\\n      <div>\\r\\n        <p>{{comment.duration}}</p>\\r\\n      </div>\\r\\n      <b>{{comment.text}}</b>\\r\\n    </div>\\r\\n    <hr />\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".post-title {\\r\\n  font-size: 28px;\\r\\n  font-weight: bold;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.post-title:hover {\\r\\n  opacity: 0.6;\\r\\n}\\r\\n\\r\\n.subreddit-text {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.post-url {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.username{\\r\\n    color: gray;\\r\\n}\\r\\n\\r\\n.post-text{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.post{\\r\\n    --post-line-color: #ccc;    \\r\\n    border: 1px solid #ccc;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255,255,255,0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding:5px;\\r\\n}\\r\\n\\r\\n.comment{    \\r\\n    --post-line-color: #ccc;    \\r\\n    border: 1px solid #ccc;    \\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255,255,255,0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding:5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXctcG9zdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLHVDQUF1QztJQUN2QyxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUNBQXVDO0lBQ3ZDLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZiIsImZpbGUiOiJ2aWV3LXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0LXRpdGxlIHtcclxuICBmb250LXNpemU6IDI4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLnBvc3QtdGl0bGU6aG92ZXIge1xyXG4gIG9wYWNpdHk6IDAuNjtcclxufVxyXG5cclxuLnN1YnJlZGRpdC10ZXh0IHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnBvc3QtdXJsIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi51c2VybmFtZXtcclxuICAgIGNvbG9yOiBncmF5O1xyXG59XHJcblxyXG4ucG9zdC10ZXh0e1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLnBvc3R7XHJcbiAgICAtLXBvc3QtbGluZS1jb2xvcjogI2NjYzsgICAgXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjgpO1xyXG4gICAgY29sb3I6ICM4NzhBOEM7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOjVweDtcclxufVxyXG5cclxuLmNvbW1lbnR7ICAgIFxyXG4gICAgLS1wb3N0LWxpbmUtY29sb3I6ICNjY2M7ICAgIFxyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgICAgXHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC44KTtcclxuICAgIGNvbG9yOiAjODc4QThDO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzo1cHg7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SignupRequestPayload } from './singup-request.payload';\r\nimport { AuthService } from '../shared/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signupRequestPayload: SignupRequestPayload;\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private router: Router,\r\n    private toastr: ToastrService) {\r\n    this.signupRequestPayload = {\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signupForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  signup() {\r\n    this.signupRequestPayload.email = this.signupForm.get('email').value;\r\n    this.signupRequestPayload.username = this.signupForm.get('username').value;\r\n    this.signupRequestPayload.password = this.signupForm.get('password').value;\r\n\r\n    this.authService.signup(this.signupRequestPayload)\r\n      .subscribe(data => {\r\n        this.router.navigate(['/login'],\r\n          { queryParams: { registered: 'true' } });\r\n      }, error => {\r\n        console.log(error);\r\n        this.toastr.error('Registration Failed! Please try again');\r\n      });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-reddit-clone';\r\n}\r\n","export default \".btnCreatePost,\\r\\n.btnCreateSubreddit {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.post-form {\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.comment-notification {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.create-post-container {\\r\\n  margin-top: 10px;\\r\\n  --post-line-color: #ccc;\\r\\n  border: 1px solid #ccc;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n  overflow: hidden;\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  color: #878A8C;\\r\\n  position: relative;\\r\\n  border-radius: 4px;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.btnDiscard {\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;\\r\\n    width: 288px;\\r\\n    height: 34px;\\r\\n    margin-top: 5px;\\r\\n    color: #0079D3;\\r\\n    background-color: transparent;\\r\\n  }\\r\\n\\r\\n.create-post-heading {\\r\\n  font-size: 18px;\\r\\n  font-weight: 500;\\r\\n  line-height: 22px;\\r\\n  color: #1c1c1c;\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.btnCreatePost {\\r\\n    background-color: #0079D3;\\r\\n    border-color: #0079D3;\\r\\n    color: aliceblue;\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;\\r\\n    width: 288px;\\r\\n    height: 34px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQiwwQ0FBMEM7RUFDMUMsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsWUFBWTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFlBQVk7SUFDWixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCw2QkFBNkI7RUFDL0I7O0FBRUY7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixjQUFjO0VBRWQsT0FBTztBQUNUOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFlBQVk7SUFDWixZQUFZO0VBQ2QiLCJmaWxlIjoiY3JlYXRlLXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG5DcmVhdGVQb3N0LFxyXG4uYnRuQ3JlYXRlU3VicmVkZGl0IHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5wb3N0LWZvcm0ge1xyXG4gIG1hcmdpbjogMnB4O1xyXG59XHJcblxyXG4uY29tbWVudC1ub3RpZmljYXRpb24ge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmNyZWF0ZS1wb3N0LWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICAtLXBvc3QtbGluZS1jb2xvcjogI2NjYztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcclxuICBjb2xvcjogIzg3OEE4QztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIHBhZGRpbmc6IDVweDtcclxufVxyXG5cclxuLmJ0bkRpc2NhcmQge1xyXG4gICAgZmlsbDogIzAwNzlEMztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogLjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDNweCAxNnB4O1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHdpZHRoOiAyODhweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgIGNvbG9yOiAjMDA3OUQzO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5cclxuLmNyZWF0ZS1wb3N0LWhlYWRpbmcge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gIGNvbG9yOiAjMWMxYzFjO1xyXG4gIC1tcy1mbGV4OiAxO1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5idG5DcmVhdGVQb3N0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc5RDM7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDc5RDM7XHJcbiAgICBjb2xvcjogYWxpY2VibHVlO1xyXG4gICAgZmlsbDogIzAwNzlEMztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogLjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDNweCAxNnB4O1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHdpZHRoOiAyODhweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICB9Il19 */\";","export default \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\";","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SignupRequestPayload } from '../signup/singup-request.payload';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { LoginRequestPayload } from '../login/login-request.payload';\r\nimport { LoginResponse } from '../login/login-response.payload';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  @Output() loggedIn: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() username: EventEmitter<string> = new EventEmitter();\r\n\r\n  refreshTokenPayload = {\r\n    refreshToken: this.getRefreshToken(),\r\n    username: this.getUserName()\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private localStorage: LocalStorageService) {\r\n  }\r\n\r\n  signup(signupRequestPayload: SignupRequestPayload): Observable<any> {\r\n    return this.httpClient.post('http://localhost:8080/api/auth/signup', signupRequestPayload, { responseType: 'text' });\r\n  }\r\n\r\n  login(loginRequestPayload: LoginRequestPayload): Observable<boolean> {\r\n    return this.httpClient.post<LoginResponse>('http://localhost:8080/api/auth/login',\r\n      loginRequestPayload).pipe(map(data => {\r\n        this.localStorage.store('authenticationToken', data.authenticationToken);\r\n        this.localStorage.store('username', data.username);\r\n        this.localStorage.store('refreshToken', data.refreshToken);\r\n        this.localStorage.store('expiresAt', data.expiresAt);\r\n\r\n        this.loggedIn.emit(true);\r\n        this.username.emit(data.username);\r\n        return true;\r\n      }));\r\n  }\r\n\r\n  getJwtToken() {\r\n    return this.localStorage.retrieve('authenticationToken');\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.httpClient.post<LoginResponse>('http://localhost:8080/api/auth/refresh/token',\r\n      this.refreshTokenPayload)\r\n      .pipe(tap(response => {\r\n        this.localStorage.clear('authenticationToken');\r\n        this.localStorage.clear('expiresAt');\r\n\r\n        this.localStorage.store('authenticationToken',\r\n          response.authenticationToken);\r\n        this.localStorage.store('expiresAt', response.expiresAt);\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    this.httpClient.post('http://localhost:8080/api/auth/logout', this.refreshTokenPayload,\r\n      { responseType: 'text' })\r\n      .subscribe(data => {\r\n        console.log(data);\r\n      }, error => {\r\n        throwError(error);\r\n      })\r\n    this.localStorage.clear('authenticationToken');\r\n    this.localStorage.clear('username');\r\n    this.localStorage.clear('refreshToken');\r\n    this.localStorage.clear('expiresAt');\r\n  }\r\n\r\n  getUserName() {\r\n    return this.localStorage.retrieve('username');\r\n  }\r\n  getRefreshToken() {\r\n    return this.localStorage.retrieve('refreshToken');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.getJwtToken() != null;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TokenInterceptor } from './token-interceptor';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { PostTileComponent } from './shared/post-tile/post-tile.component';\r\nimport { VoteButtonComponent } from './shared/vote-button/vote-button.component';\r\nimport { SideBarComponent } from './shared/side-bar/side-bar.component';\r\nimport { SubredditSideBarComponent } from './shared/subreddit-side-bar/subreddit-side-bar.component';\r\nimport { CreateSubredditComponent } from './subreddit/create-subreddit/create-subreddit.component';\r\nimport { CreatePostComponent } from './post/create-post/create-post.component';\r\nimport { ListSubredditsComponent } from './subreddit/list-subreddits/list-subreddits.component';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\nimport { ViewPostComponent } from './post/view-post/view-post.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserProfileComponent } from './auth/user-profile/user-profile.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    PostTileComponent,\r\n    VoteButtonComponent,\r\n    SideBarComponent,\r\n    SubredditSideBarComponent,\r\n    CreateSubredditComponent,\r\n    CreatePostComponent,\r\n    ListSubredditsComponent,\r\n    ViewPostComponent,\r\n    UserProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxWebstorageModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    FontAwesomeModule,\r\n    EditorModule,\r\n    NgbModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostModel } from '../post-model';\r\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { VotePayload } from './vote-payload';\r\nimport { VoteType } from './vote-type';\r\nimport { VoteService } from '../vote.service';\r\nimport { AuthService } from 'src/app/auth/shared/auth.service';\r\nimport { PostService } from '../post.service';\r\nimport { throwError } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-vote-button',\r\n  templateUrl: './vote-button.component.html',\r\n  styleUrls: ['./vote-button.component.css']\r\n})\r\nexport class VoteButtonComponent implements OnInit {\r\n\r\n  @Input() post: PostModel;\r\n  votePayload: VotePayload;\r\n  faArrowUp = faArrowUp;\r\n  faArrowDown = faArrowDown;\r\n  upvoteColor: string;\r\n  downvoteColor: string;\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(private voteService: VoteService,\r\n    private authService: AuthService,\r\n    private postService: PostService, private toastr: ToastrService) {\r\n\r\n    this.votePayload = {\r\n      voteType: undefined,\r\n      postId: undefined\r\n    }\r\n    this.authService.loggedIn.subscribe((data: boolean) => this.isLoggedIn = data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateVoteDetails();\r\n  }\r\n\r\n  upvotePost() {\r\n    this.votePayload.voteType = VoteType.UPVOTE;\r\n    this.vote();\r\n    this.downvoteColor = '';\r\n  }\r\n\r\n  downvotePost() {\r\n    this.votePayload.voteType = VoteType.DOWNVOTE;\r\n    this.vote();\r\n    this.upvoteColor = '';\r\n  }\r\n\r\n  private vote() {\r\n    this.votePayload.postId = this.post.id;\r\n    this.voteService.vote(this.votePayload).subscribe(() => {\r\n      this.updateVoteDetails();\r\n    }, error => {\r\n      this.toastr.error(error.error.message);\r\n      throwError(error);\r\n    });\r\n  }\r\n\r\n  private updateVoteDetails() {\r\n    this.postService.getPost(this.post.id).subscribe(post => {\r\n      this.post = post;\r\n    });\r\n  }\r\n}\r\n","export default \".create-subreddit-container {\\r\\n    margin-top: 10px;\\r\\n    --post-line-color: #ccc;\\r\\n    border: 1px solid #ccc;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255, 255, 255, 0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  .create-subreddit-heading {\\r\\n    font-size: 18px;\\r\\n    font-weight: 500;\\r\\n    line-height: 22px;\\r\\n    color: #1c1c1c;\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .btnCreateSubreddit {\\r\\n    background-color: #0079D3;\\r\\n    border-color: #0079D3;\\r\\n    color: aliceblue;\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;\\r\\n    width: 288px;\\r\\n    height: 34px;\\r\\n  }\\r\\n  \\r\\n  .btnDiscard {\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;\\r\\n    opacity: 1;\\r\\n    width: 288px;\\r\\n    height: 34px;\\r\\n    margin-top: 5px;\\r\\n    color: #0079D3;\\r\\n    background-color: transparent;\\r\\n  }\\r\\n  \\r\\n  .guidelines {\\r\\n    text-align: center;\\r\\n    font-size: 16px;\\r\\n    font-weight: 500;\\r\\n    line-height: 20px;\\r\\n    color: #1c1c1c;\\r\\n  }\\r\\n  \\r\\n  .sidebar {\\r\\n    width: 312px;\\r\\n    height: 242px;\\r\\n    --post-line-color: #ccc;\\r\\n    border: 1px solid #ccc;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255, 255, 255, 0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding: 5px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS1zdWJyZWRkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLDBDQUEwQztJQUMxQyxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixjQUFjO0lBRWQsT0FBTztFQUNUOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFlBQVk7SUFDWixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlO0lBQ2YsY0FBYztJQUNkLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsMENBQTBDO0lBQzFDLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0VBQ3JCIiwiZmlsZSI6ImNyZWF0ZS1zdWJyZWRkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcmVhdGUtc3VicmVkZGl0LWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgLS1wb3N0LWxpbmUtY29sb3I6ICNjY2M7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xyXG4gICAgY29sb3I6ICM4NzhBOEM7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5jcmVhdGUtc3VicmVkZGl0LWhlYWRpbmcge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgY29sb3I6ICMxYzFjMWM7XHJcbiAgICAtbXMtZmxleDogMTtcclxuICAgIGZsZXg6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG5DcmVhdGVTdWJyZWRkaXQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzlEMztcclxuICAgIGJvcmRlci1jb2xvcjogIzAwNzlEMztcclxuICAgIGNvbG9yOiBhbGljZWJsdWU7XHJcbiAgICBmaWxsOiAjMDA3OUQzO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAuNXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgcGFkZGluZzogM3B4IDE2cHg7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgd2lkdGg6IDI4OHB4O1xyXG4gICAgaGVpZ2h0OiAzNHB4O1xyXG4gIH1cclxuICBcclxuICAuYnRuRGlzY2FyZCB7XHJcbiAgICBmaWxsOiAjMDA3OUQzO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAuNXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgcGFkZGluZzogM3B4IDE2cHg7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgd2lkdGg6IDI4OHB4O1xyXG4gICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgY29sb3I6ICMwMDc5RDM7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgXHJcbiAgLmd1aWRlbGluZXMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gICAgY29sb3I6ICMxYzFjMWM7XHJcbiAgfVxyXG4gIFxyXG4gIC5zaWRlYmFyIHtcclxuICAgIHdpZHRoOiAzMTJweDtcclxuICAgIGhlaWdodDogMjQycHg7XHJcbiAgICAtLXBvc3QtbGluZS1jb2xvcjogI2NjYztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcclxuICAgIGNvbG9yOiAjODc4QThDO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { LoginRequestPayload } from './login-request.payload';\r\nimport { AuthService } from '../shared/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loginRequestPayload: LoginRequestPayload;\r\n  registerSuccessMessage: string;\r\n  isError: boolean;\r\n\r\n  constructor(private authService: AuthService, private activatedRoute: ActivatedRoute,\r\n    private router: Router, private toastr: ToastrService) {\r\n    this.loginRequestPayload = {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.activatedRoute.queryParams\r\n      .subscribe(params => {\r\n        if (params.registered !== undefined && params.registered === 'true') {\r\n          this.toastr.success('Signup Successful');\r\n          this.registerSuccessMessage = 'Please Check your inbox for activation email '\r\n            + 'activate your account before you Login!';\r\n        }\r\n      });\r\n  }\r\n\r\n  login() {\r\n    this.loginRequestPayload.username = this.loginForm.get('username').value;\r\n    this.loginRequestPayload.password = this.loginForm.get('password').value;\r\n\r\n    this.authService.login(this.loginRequestPayload).subscribe(data => {\r\n      this.isError = false;\r\n      this.router.navigateByUrl('');\r\n      this.toastr.success('Login Successful');\r\n    }, error => {\r\n      this.isError = true;\r\n      throwError(error);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\r\nimport { PostService } from '../post.service';\r\nimport { PostModel } from '../post-model';\r\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-post-tile',\r\n  templateUrl: './post-tile.component.html',\r\n  styleUrls: ['./post-tile.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PostTileComponent implements OnInit {\r\n\r\n  faComments = faComments;\r\n  @Input() posts: PostModel[];\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goToPost(id: number): void {\r\n    this.router.navigateByUrl('/view-post/' + id);\r\n  }\r\n}\r\n","export default \".post{\\r\\n    --post-line-color: #ccc;    \\r\\n    border: 1px solid #ccc;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255,255,255,0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding:5px;\\r\\n}\\r\\n\\r\\n.btnCommments{\\r\\n    border-radius: 2px solid;\\r\\n    color: #878A8C;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.btnCommments:hover{\\r\\n    opacity: 0.65;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.post-title{\\r\\n    font-size: 28px;\\r\\n    font-weight: bold;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.posturl, .postname{    \\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.subreddit-text{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.post-text{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtdGlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1Q0FBdUM7SUFDdkMsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLGNBQWM7SUFDZCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJwb3N0LXRpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0e1xyXG4gICAgLS1wb3N0LWxpbmUtY29sb3I6ICNjY2M7ICAgIFxyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC44KTtcclxuICAgIGNvbG9yOiAjODc4QThDO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzo1cHg7XHJcbn1cclxuXHJcbi5idG5Db21tbWVudHN7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHggc29saWQ7XHJcbiAgICBjb2xvcjogIzg3OEE4QztcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5idG5Db21tbWVudHM6aG92ZXJ7XHJcbiAgICBvcGFjaXR5OiAwLjY1O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucG9zdC10aXRsZXtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLnBvc3R1cmwsIC5wb3N0bmFtZXsgICAgXHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5zdWJyZWRkaXQtdGV4dHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ucG9zdC10ZXh0e1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufSJdfQ== */\";","export default \".sidebar{\\r\\n    width: 312px;\\r\\n    height: 242px;\\r\\n    --post-line-color: #ccc;    \\r\\n    border: 1px solid #ccc;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255,255,255,0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding:5px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btnCreatePost, .btnCreateSubreddit{\\r\\n    background-color: #0079D3;\\r\\n    border-color: #0079D3;\\r\\n    color: aliceblue;\\r\\n    fill: #0079D3;\\r\\n    border: 1px solid;\\r\\n    border-radius: 4px;\\r\\n    text-align: center;\\r\\n    letter-spacing: 1px;\\r\\n    text-decoration: none;\\r\\n    font-size: 12px;\\r\\n    font-weight: 700;\\r\\n    letter-spacing: .5px;\\r\\n    line-height: 24px;\\r\\n    text-transform: uppercase;\\r\\n    padding: 3px 16px;    \\r\\n    opacity: 1;\\r\\n    width: 288px;\\r\\n    height: 34px;\\r\\n}\\r\\n\\r\\n.btnCreateSubreddit{\\r\\n    margin-top: 5px;\\r\\n    color: #0079D3;\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\n.sidebar>ul>li{\\r\\n    font-size: 16px;\\r\\n    font-weight: 500;\\r\\n    line-height: 20px;\\r\\n    color: #1c1c1c;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1Q0FBdUM7SUFDdkMsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEIiLCJmaWxlIjoic2lkZS1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlYmFye1xyXG4gICAgd2lkdGg6IDMxMnB4O1xyXG4gICAgaGVpZ2h0OiAyNDJweDtcclxuICAgIC0tcG9zdC1saW5lLWNvbG9yOiAjY2NjOyAgICBcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC44KTtcclxuICAgIGNvbG9yOiAjODc4QThDO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzo1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmJ0bkNyZWF0ZVBvc3QsIC5idG5DcmVhdGVTdWJyZWRkaXR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3OUQzO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA3OUQzO1xyXG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcclxuICAgIGZpbGw6ICMwMDc5RDM7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IC41cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nOiAzcHggMTZweDsgICAgXHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgd2lkdGg6IDI4OHB4O1xyXG4gICAgaGVpZ2h0OiAzNHB4O1xyXG59XHJcblxyXG4uYnRuQ3JlYXRlU3VicmVkZGl0e1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgY29sb3I6ICMwMDc5RDM7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLnNpZGViYXI+dWw+bGl7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICBjb2xvcjogIzFjMWMxYztcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from '../auth/shared/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  faUser = faUser;\r\n  isLoggedIn: boolean;\r\n  username: string;\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.loggedIn.subscribe((data: boolean) => this.isLoggedIn = data);\r\n    this.authService.username.subscribe((data: string) => this.username = data);\r\n    this.isLoggedIn = this.authService.isLoggedIn();\r\n    this.username = this.authService.getUserName();\r\n  }\r\n\r\n  goToUserProfile() {\r\n    this.router.navigateByUrl('/user-profile/' + this.username);\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.isLoggedIn = false;\r\n    this.router.navigateByUrl('');\r\n  }\r\n}\r\n","export default \"<div class=\\\"sidebar\\\">\\r\\n    <img src=\\\"https://www.redditstatic.com/desktop2x/img/id-cards/home-banner@2x.png\\\">\\r\\n    <div style=\\\"text-align: center; font-size: 1em\\\">Welcome to Spring Reddit Clone home page. Come here to\\r\\n        check in with your favorite subreddits.</div>\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n        <button class=\\\"btnCreatePost\\\" (click)=\\\"goToCreatePost()\\\">Create Post</button>\\r\\n    </div>\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n        <button class=\\\"btnCreateSubreddit\\\" (click)=\\\"goToCreateSubreddit()\\\">Create Subreddit</button>\\r\\n    </div>\\r\\n</div>\";","export default \".sidebar-view-subreddit {\\r\\n    width: 312px;\\r\\n    height: 242px;\\r\\n    --post-line-color: #ccc;\\r\\n    border: 1px solid #ccc;\\r\\n    margin-bottom: 10px;\\r\\n    overflow: hidden;\\r\\n    background-color: rgba(255, 255, 255, 0.8);\\r\\n    color: #878A8C;\\r\\n    position: relative;\\r\\n    border-radius: 4px;\\r\\n    padding: 5px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  .sidebar-view-subreddit {\\r\\n    height: 280px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YnJlZGRpdC1zaWRlLWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsMENBQTBDO0lBQzFDLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmIiwiZmlsZSI6InN1YnJlZGRpdC1zaWRlLWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGViYXItdmlldy1zdWJyZWRkaXQge1xyXG4gICAgd2lkdGg6IDMxMnB4O1xyXG4gICAgaGVpZ2h0OiAyNDJweDtcclxuICAgIC0tcG9zdC1saW5lLWNvbG9yOiAjY2NjO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xyXG4gICAgY29sb3I6ICM4NzhBOEM7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLnNpZGViYXItdmlldy1zdWJyZWRkaXQge1xyXG4gICAgaGVpZ2h0OiAyODBweDtcclxuICB9Il19 */\";","export default \"<header>\\r\\n    <nav class=\\\"navbar fixed-top navbar-expand-lg navbar-light bg-light\\\">\\r\\n        <div class=\\\"flex-grow-1\\\">\\r\\n            <a aria-label=\\\"Home\\\" class=\\\"logo\\\" routerLink=\\\"/\\\">\\r\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" class=\\\"reddit-icon-svg\\\">\\r\\n                    <g>\\r\\n                        <circle fill=\\\"#FF4500\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"10\\\"></circle>\\r\\n                        <path fill=\\\"#FFF\\\"\\r\\n                            d=\\\"M16.67,10A1.46,1.46,0,0,0,14.2,9a7.12,7.12,0,0,0-3.85-1.23L11,4.65,13.14,5.1a1,1,0,1,0,.13-0.61L10.82,4a0.31,0.31,0,0,0-.37.24L9.71,7.71a7.14,7.14,0,0,0-3.9,1.23A1.46,1.46,0,1,0,4.2,11.33a2.87,2.87,0,0,0,0,.44c0,2.24,2.61,4.06,5.83,4.06s5.83-1.82,5.83-4.06a2.87,2.87,0,0,0,0-.44A1.46,1.46,0,0,0,16.67,10Zm-10,1a1,1,0,1,1,1,1A1,1,0,0,1,6.67,11Zm5.81,2.75a3.84,3.84,0,0,1-2.47.77,3.84,3.84,0,0,1-2.47-.77,0.27,0.27,0,0,1,.38-0.38A3.27,3.27,0,0,0,10,14a3.28,3.28,0,0,0,2.09-.61A0.27,0.27,0,1,1,12.48,13.79Zm-0.18-1.71a1,1,0,1,1,1-1A1,1,0,0,1,12.29,12.08Z\\\">\\r\\n                        </path>\\r\\n                    </g>\\r\\n                </svg>\\r\\n                <span class=\\\"reddit-text\\\">\\r\\n                    Spring Reddit Clone\\r\\n                </span>\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\\\"flex-grow-1 float-right\\\">\\r\\n            <div *ngIf=\\\"isLoggedIn\\\" ngbDropdown class=\\\"float-right\\\">\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                    <button (click)=\\\"goToUserProfile()\\\" ngbDropdownItem>Profile</button>\\r\\n                    <button (click)=\\\"logout()\\\" ngbDropdownItem>Logout</button>\\r\\n                </div>\\r\\n                <button class=\\\"userdetails\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\r\\n                    <img class=\\\"account-icon\\\" src=\\\"https://www.redditstatic.com/avatars/avatar_default_08_D4E815.png\\\">\\r\\n                    {{username}}\\r\\n                </button>\\r\\n            </div>            \\r\\n            <div *ngIf=\\\"!isLoggedIn\\\">\\r\\n                <a routerLink=\\\"/sign-up\\\" class=\\\"float-right sign-up mr-2\\\">Sign up</a>\\r\\n                <a routerLink=\\\"/login\\\" class=\\\"float-right login mr-2\\\">Login</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommentPayload } from './comment.payload';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllCommentsForPost(postId: number): Observable<CommentPayload[]> {\r\n    return this.httpClient.get<CommentPayload[]>('http://localhost:8080/api/comments/by-post/' + postId);\r\n  }\r\n\r\n  postComment(commentPayload: CommentPayload): Observable<any> {\r\n    return this.httpClient.post<any>('http://localhost:8080/api/comments/', commentPayload);\r\n  }\r\n\r\n  getAllCommentsByUser(name: string) {\r\n    return this.httpClient.get<CommentPayload[]>('http://localhost:8080/api/comments/by-user/' + name);\r\n  }\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"create-subreddit-container\\\">\\r\\n        <form class=\\\"post-form\\\" [formGroup]=\\\"createSubredditForm\\\" (ngSubmit)=\\\"createSubreddit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"create-subreddit-heading\\\">Create Subreddit</div>\\r\\n            <hr />\\r\\n            <input type=\\\"text\\\" [formControlName]=\\\"'title'\\\" class=\\\"form-control\\\" style=\\\"margin-top: 5px\\\"\\r\\n              placeholder=\\\"Title\\\">\\r\\n            <textarea type=\\\"text\\\" [formControlName]=\\\"'description'\\\" style=\\\"width: 100%; margin-top: 5px\\\"\\r\\n              placeholder=\\\"Description\\\"></textarea>\\r\\n            <div>\\r\\n              <div style=\\\"margin-top: 5px\\\" class=\\\"float-right\\\">\\r\\n                <button (click)=\\\"discard()\\\" class=\\\"btnDiscard\\\">Discard</button>\\r\\n                <button class=\\\"btnCreateSubreddit\\\">Create</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"sidebar\\\">\\r\\n          <h5 class=\\\"guidelines\\\">Posting to Spring Reddit</h5>\\r\\n          <hr />\\r\\n          <ul>\\r\\n            <li>Remember the human</li>\\r\\n            <hr />\\r\\n            <li>Behave like you would in real life</li>\\r\\n            <hr />\\r\\n            <li>Don't spam</li>\\r\\n            <hr />\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"sidebar-view-subreddit\\\">\\r\\n    <div style=\\\"color: black; font-weight: bold\\\">Browse Subreddits</div>\\r\\n    <hr />\\r\\n    <span *ngFor=\\\"let subreddit of subreddits\\\">\\r\\n        <span class=\\\"subreddit-text\\\"><a href=\\\"/view-subreddit/{{subreddit.id}}\\\">{{subreddit.name}}</a></span>\\r\\n        <hr />\\r\\n    </span>\\r\\n    <div style=\\\"text-align: center\\\" *ngIf=\\\"displayViewAll\\\">\\r\\n        <a style=\\\"font-weight: bold\\\" routerLink=\\\"/list-subreddits\\\">View All</a>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/shared/post.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommentService } from 'src/app/comment/comment.service';\r\nimport { PostModel } from 'src/app/shared/post-model';\r\nimport { CommentPayload } from 'src/app/comment/comment.payload';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  name: string;\r\n  posts: PostModel[];\r\n  comments: CommentPayload[];\r\n  postLength: number;\r\n  commentLength: number;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private postService: PostService,\r\n    private commentService: CommentService) {\r\n    this.name = this.activatedRoute.snapshot.params.name;\r\n\r\n    this.postService.getAllPostsByUser(this.name).subscribe(data => {\r\n      this.posts = data;\r\n      this.postLength = data.length;\r\n    });\r\n    this.commentService.getAllCommentsByUser(this.name).subscribe(data => {\r\n      this.comments = data;\r\n      this.commentLength = data.length;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"<!-- Display Posts-->\\r\\n<div class=\\\"row post\\\" *ngFor=\\\"let post of posts\\\">\\r\\n  <app-vote-button [post]=\\\"post\\\"></app-vote-button>\\r\\n  <!-- Section to Display Post Information-->\\r\\n  <div class=\\\"col-md-11\\\">\\r\\n    <span class=\\\"subreddit-info\\\">\\r\\n      <span class=\\\"subreddit-text\\\"><a class=\\\"posturl\\\" routerLink=\\\"\\\">{{post.subredditName}}</a></span>\\r\\n      <span> . Posted by <a class=\\\"username\\\" routerLink=\\\"/user/{{post.userName}}\\\">{{post.userName}}</a></span>\\r\\n      <span> . {{post.duration}}</span>\\r\\n    </span>\\r\\n    <hr />\\r\\n    <div class=\\\"post-title\\\">\\r\\n      <a class=\\\"postname\\\" href=\\\"{{post.url}}\\\">{{post.postName}}</a>\\r\\n    </div>\\r\\n    <div>\\r\\n      <p class=\\\"post-text\\\" [innerHtml]=\\\"post.description\\\"></p>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <span>\\r\\n      <a class=\\\"btnCommments\\\" role=\\\"button\\\">\\r\\n        <fa-icon [icon]=\\\"faComments\\\"></fa-icon>\\r\\n        Comments({{post.commentCount}})\\r\\n      </a>\\r\\n      <button class=\\\"login\\\" (click)=\\\"goToPost(post.id)\\\">\\r\\n        Read Post\\r\\n      </button>\\r\\n    </span>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { SubredditModel } from 'src/app/subreddit/subreddit-response';\r\nimport { Router } from '@angular/router';\r\nimport { PostService } from 'src/app/shared/post.service';\r\nimport { SubredditService } from 'src/app/subreddit/subreddit.service';\r\nimport { throwError } from 'rxjs';\r\nimport { CreatePostPayload } from './create-post.payload';\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styleUrls: ['./create-post.component.css']\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n\r\n  createPostForm: FormGroup;\r\n  postPayload: CreatePostPayload;\r\n  subreddits: Array<SubredditModel>;\r\n\r\n  constructor(private router: Router, private postService: PostService,\r\n    private subredditService: SubredditService) {\r\n    this.postPayload = {\r\n      postName: '',\r\n      url: '',\r\n      description: '',\r\n      subredditName: ''\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createPostForm = new FormGroup({\r\n      postName: new FormControl('', Validators.required),\r\n      subredditName: new FormControl('', Validators.required),\r\n      url: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n    });\r\n    this.subredditService.getAllSubreddits().subscribe((data) => {\r\n      this.subreddits = data;\r\n    }, error => {\r\n      throwError(error);\r\n    });\r\n  }\r\n\r\n  createPost() {\r\n    this.postPayload.postName = this.createPostForm.get('postName').value;\r\n    this.postPayload.subredditName = this.createPostForm.get('subredditName').value;\r\n    this.postPayload.url = this.createPostForm.get('url').value;\r\n    this.postPayload.description = this.createPostForm.get('description').value;\r\n\r\n    this.postService.createPost(this.postPayload).subscribe((data) => {\r\n      this.router.navigateByUrl('/');\r\n    }, error => {\r\n      throwError(error);\r\n    })\r\n  }\r\n\r\n  discardPost() {\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreatePostComponent } from './post/create-post/create-post.component';\r\nimport { CreateSubredditComponent } from './subreddit/create-subreddit/create-subreddit.component';\r\nimport { ListSubredditsComponent } from './subreddit/list-subreddits/list-subreddits.component';\r\nimport { ViewPostComponent } from './post/view-post/view-post.component';\r\nimport { UserProfileComponent } from './auth/user-profile/user-profile.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'view-post/:id', component: ViewPostComponent },\r\n  { path: 'user-profile/:name', component: UserProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'list-subreddits', component: ListSubredditsComponent },\r\n  { path: 'create-post', component: CreatePostComponent, canActivate: [AuthGuard] },\r\n  { path: 'create-subreddit', component: CreateSubredditComponent, canActivate: [AuthGuard] },\r\n  { path: 'sign-up', component: SignupComponent },\r\n  { path: 'login', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","export default \".login-section{\\r\\n    margin: 100px;\\r\\n}\\r\\n\\r\\n.login-failed, .register-success{\\r\\n    text-align: center;\\r\\n    margin: auto;\\r\\n    margin-top: 10px;\\r\\n    border: 2px solid black;\\r\\n    width: 65%;    \\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.login-failed-text, .register-success-text{\\r\\n    text-align: center;\\r\\n    margin-top: 5px;\\r\\n    font-weight: bold;    \\r\\n    color: aliceblue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLFVBQVU7SUFDVixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1zZWN0aW9ue1xyXG4gICAgbWFyZ2luOiAxMDBweDtcclxufVxyXG5cclxuLmxvZ2luLWZhaWxlZCwgLnJlZ2lzdGVyLXN1Y2Nlc3N7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgICB3aWR0aDogNjUlOyAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmxvZ2luLWZhaWxlZC10ZXh0LCAucmVnaXN0ZXItc3VjY2Vzcy10ZXh0e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7ICAgIFxyXG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.css']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goToCreatePost() {\r\n    this.router.navigateByUrl('/create-post');\r\n  }\r\n\r\n  goToCreateSubreddit() {\r\n    this.router.navigateByUrl('/create-subreddit');\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"<div class=\\\"login-section\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\" style=\\\"text-align: center\\\"><h4>Login</h4></div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"user_name\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Username</label>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <input type=\\\"text\\\" id=\\\"user_name\\\" class=\\\"form-control\\\" [formControlName]=\\\"'username'\\\" name=\\\"user_name\\\" required\\r\\n                                    autofocus>\\r\\n                                <span *ngIf=\\\"!loginForm.get('username').valid && loginForm.get('username').touched\\\">\\r\\n                                   Please provide a valid username\\r\\n                                </span>                                    \\r\\n                            </div>\\r\\n                        </div>\\r\\n \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Password</label>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [formControlName]=\\\"'password'\\\" name=\\\"password\\\" required>\\r\\n                                <span *ngIf=\\\"!loginForm.get('password').valid && loginForm.get('password').touched\\\">\\r\\n                                  Password cannot be empty\\r\\n                                </span>                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n \\r\\n                        <span class=\\\"col-md-6 offset-md-4\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"login\\\">\\r\\n                                Login\\r\\n                            </button>\\r\\n                            <span style=\\\"padding-left: 15px\\\">New User? <a routerLink=\\\"/signup\\\">SIGN UP</a></span>\\r\\n                        </span>   \\r\\n                        <div class=\\\"login-failed\\\" *ngIf='this.isError'>\\r\\n                             <p class=\\\"login-failed-text\\\">Login Failed. Please check your credentials and try again.</p>   \\r\\n                        </div>\\r\\n                        <div class=\\\"login-failed\\\" [ngStyle]=\\\"{'background-color': 'green'}\\\" *ngIf=\\\"this.registerSuccessMessage.length > 0\\\">\\r\\n                            <p class=\\\"register-success-text\\\">{{registerSuccessMessage}}</p>   \\r\\n                       </div>                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n    </div>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}